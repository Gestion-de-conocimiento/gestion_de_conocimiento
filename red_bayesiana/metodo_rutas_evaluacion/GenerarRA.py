 
import requests
import mysql.connector
import numpy as np
import pickle
URL = "http://localhost/arbol/caminoslibreria"
cnx = mysql.connector.connect(user='root', password='PROYECTO1KMS', host='localhost', database='kms')
 
caminos = [[1, 52, 202, 203, 204, 205, 206, 207, 208, 209], [1, 51, 196, 197, 198, 199, 200, 201], [1, 51, 52, 202, 203, 204, 205, 206, 207, 208, 209], [1, 40, 191, 192, 41, 193, 42, 194, 195], [1, 40, 191, 192, 41, 193, 42, 50, 195], [1, 40, 191, 192, 41, 193, 42, 49, 195], [1, 40, 191, 192, 41, 193, 42, 48, 195], [1, 40, 191, 192, 41, 193, 42, 47, 195], [1, 40, 191, 192, 41, 193, 42, 46, 195], [1, 40, 191, 192, 41, 193, 42, 44, 195], [1, 40, 51, 196, 197, 198, 199, 200, 201], [1, 40, 51, 52, 202, 203, 204, 205, 206, 207, 208, 209], [1, 20, 13, 186, 10, 71, 73, 76, 77, 187], [1, 20, 13, 186, 10, 71, 73, 75, 77, 187], [1, 20, 13, 186, 10, 71, 73, 74, 77, 187], [1, 20, 13, 186, 10, 71, 72, 73, 76, 77, 187], [1, 20, 13, 186, 10, 71, 72, 73, 75, 77, 187], [1, 20, 13, 186, 10, 71, 72, 73, 74, 77, 187], [1, 20, 13, 17, 40, 191, 192,41, 193, 42, 194, 195], [1, 20, 13, 17, 40, 191, 192, 41, 193, 42, 50, 195], [1, 20, 13, 17, 40, 191, 192, 41, 193, 42, 49, 195], [1, 20, 13, 17, 40, 191, 192, 41, 193, 42, 48, 195], [1, 20, 13, 17, 40, 191, 192, 41, 193, 42, 47, 195], [1, 20, 13, 17, 40, 191, 192, 41, 193, 42, 46, 195], [1, 20, 13, 17, 40, 191, 192, 41, 193, 42,44, 195], [1, 20, 13, 17, 40, 51, 196, 197, 198, 199, 200, 201], [1, 20, 13, 17, 40, 51, 52, 202, 203, 204, 205, 206, 207, 208, 209], [1, 20, 13, 17, 53, 55, 57, 58,60, 188, 189, 190], [1, 20, 13, 17, 53, 55, 57, 58, 59, 189, 190], [1, 20, 13, 17, 53, 60, 188, 189, 190], [1, 20, 13, 17, 19, 54, 55, 57, 58, 60, 188, 189, 190], [1, 20, 13, 17, 19, 54, 55, 57, 58, 59, 189, 190], [1, 20, 23, 181, 182, 183, 184, 185], [1, 20, 23, 61, 62, 63, 172, 173, 174, 176], [1, 20, 23, 61, 62, 63, 172, 173, 174, 175, 177, 180], [1, 20, 23, 61, 62, 63, 172, 173, 174, 175, 177, 179], [1, 20, 23, 61, 62, 63, 172, 173, 174, 175, 177, 178], [1, 17, 40, 191, 192, 41, 193, 42, 194, 195], [1, 17, 40, 191, 192, 41, 193, 42, 50, 195], [1, 17, 40, 191, 192, 41, 193, 42, 49, 195], [1, 17, 40, 191, 192, 41, 193, 42, 48, 195], [1, 17, 40, 191, 192, 41, 193, 42, 47, 195], [1, 17, 40, 191, 192, 41, 193, 42, 46, 195], [1, 17, 40, 191, 192, 41, 193, 42, 44, 195], [1, 17, 40, 51, 196, 197, 198, 199, 200, 201], [1, 17, 40, 51, 52, 202, 203, 204, 205, 206, 207, 208, 209], [1, 17, 53, 55, 57, 58, 60, 188, 189, 190], [1, 17, 53, 55, 57, 58, 59, 189, 190], [1, 17, 53, 60, 188, 189, 190], [1, 17, 19, 54, 55, 57, 58, 60, 188, 189, 190], [1, 17, 19, 54, 55, 57, 58, 59, 189, 190], [1, 14, 20, 13, 186, 10, 71, 73, 76, 77, 187], [1, 14, 20, 13, 186, 10, 71, 73, 75, 77, 187], [1, 14, 20, 13, 186, 10, 71, 73, 74, 77, 187], [1, 14, 20, 13, 186, 10, 71, 72, 73, 76, 77, 187], [1, 14, 20, 13, 186, 10, 71, 72, 73, 75, 77, 187], [1, 14, 20, 13, 186, 10, 71, 72, 73, 74, 77, 187], [1, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 194, 195], [1, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 50, 195], [1, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 49, 195], [1, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 48, 195], [1, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 47, 195], [1, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 46, 195], [1, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 44, 195], [1, 14, 20, 13, 17, 40, 51, 196, 197, 198, 199, 200, 201], [1, 14, 20, 13, 17, 40, 51, 52, 202, 203, 204, 205, 206, 207, 208, 209], [1, 14, 20, 13, 17, 53, 55, 57, 58, 60, 188, 189, 190], [1, 14, 20, 13, 17, 53, 55, 57, 58, 59, 189, 190], [1, 14, 20, 13, 17, 53, 60, 188, 189, 190], [1, 14, 20, 13, 17, 19, 54, 55, 57, 58, 60, 188, 189, 190], [1, 14, 20, 13, 17, 19, 54, 55, 57, 58, 59, 189, 190], [1, 14, 20, 23, 181, 182, 183, 184, 185], [1, 14, 20, 23, 61, 62, 63, 172, 173, 174, 176], [1, 14, 20, 23, 61, 62, 63, 172, 173, 174, 175, 177, 180], [1, 14, 20, 23, 61, 62, 63, 172, 173, 174, 175, 177, 179], [1, 14, 20, 23, 61, 62, 63, 172, 173, 174, 175, 177, 178], [1, 14, 24, 82, 83, 86, 88, 165], [1,14, 24, 82, 83, 86, 88, 163, 166, 81, 80, 170], [1, 14, 24, 82, 83, 86, 88, 163, 166, 168, 169], [1, 14, 24, 82, 83, 86, 88, 163, 166, 167, 168, 169], [1, 14, 24, 82, 83, 86, 88, 163, 167, 168, 169], [1, 14, 24, 82, 83, 86, 88, 163, 165], [1, 14, 24, 82, 83, 86, 88, 91, 166, 81, 80, 170], [1, 14, 24, 82, 83, 86, 88, 91, 166, 168,169], [1, 14, 24, 82, 83, 86, 88, 91, 166, 167, 168, 169], [1, 14, 24, 82, 83, 86, 88, 91, 164, 165], [1, 14, 24, 78, 81, 80, 170], [1, 14, 24, 78, 79, 80, 170], [1,13, 186, 10, 71, 73, 76, 77, 187], [1, 13, 186, 10, 71, 73, 75, 77, 187], [1, 13, 186, 10, 71, 73, 74, 77, 187], [1, 13, 186, 10, 71, 72, 73, 76, 77, 187], [1, 13, 186, 10, 71, 72, 73, 75, 77, 187], [1, 13, 186, 10, 71, 72, 73, 74, 77, 187], [1, 13, 17, 40, 191, 192, 41, 193, 42, 194, 195], [1, 13, 17, 40, 191, 192, 41, 193, 42, 50, 195], [1, 13, 17, 40, 191, 192, 41, 193, 42, 49, 195], [1, 13, 17, 40, 191, 192, 41, 193, 42, 48, 195], [1, 13, 17, 40, 191, 192, 41, 193, 42, 47, 195], [1, 13, 17, 40, 191, 192, 41, 193, 42, 46, 195], [1, 13, 17, 40, 191, 192, 41, 193, 42, 44, 195], [1, 13, 17, 40, 51, 196, 197, 198, 199, 200, 201], [1, 13, 17, 40, 51, 52, 202, 203, 204, 205, 206, 207, 208, 209], [1, 13, 17, 53, 55, 57, 58, 60, 188, 189, 190], [1, 13, 17, 53, 55, 57, 58, 59, 189, 190], [1, 13, 17, 53, 60, 188, 189, 190], [1, 13, 17, 19, 54, 55, 57, 58, 60, 188, 189, 190], [1, 13, 17, 19, 54, 55, 57, 58, 59, 189, 190], [1, 2, 14, 20, 13, 186, 10, 71, 73, 76, 77, 187], [1, 2, 14, 20, 13, 186, 10, 71, 73, 75, 77, 187], [1, 2, 14, 20, 13, 186, 10, 71, 73, 74, 77, 187], [1, 2, 14, 20, 13, 186, 10, 71, 72, 73, 76, 77, 187], [1, 2, 14, 20, 13, 186, 10, 71, 72, 73, 75, 77, 187], [1, 2, 14, 20, 13, 186, 10, 71, 72, 73, 74, 77, 187], [1, 2, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 194, 195], [1, 2, 14, 20, 13, 17, 40,191, 192, 41, 193, 42, 50, 195], [1, 2, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 49, 195], [1, 2, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 48, 195], [1, 2, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 47, 195], [1, 2, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 46, 195], [1, 2, 14, 20, 13, 17, 40, 191, 192, 41, 193, 42, 44, 195], [1, 2, 14, 20, 13, 17, 40, 51, 196, 197, 198, 199, 200, 201], [1, 2, 14, 20, 13, 17, 40, 51, 52, 202, 203, 204, 205, 206, 207, 208, 209], [1, 2, 14, 20, 13, 17, 53,55, 57, 58, 60, 188, 189, 190], [1, 2, 14, 20, 13, 17, 53, 55, 57, 58, 59, 189, 190], [1, 2, 14, 20, 13, 17, 53, 60, 188, 189, 190], [1, 2, 14, 20, 13, 17, 19, 54, 55, 57, 58, 60, 188, 189, 190], [1, 2, 14, 20, 13, 17, 19, 54, 55, 57, 58, 59, 189, 190], [1, 2, 14, 20, 23, 181, 182, 183, 184, 185], [1, 2, 14, 20, 23, 61, 62, 63, 172, 173, 174, 176], [1, 2, 14, 20, 23, 61, 62, 63, 172, 173, 174, 175, 177, 180], [1, 2, 14, 20, 23, 61, 62, 63, 172, 173, 174, 175, 177, 179], [1, 2, 14, 20, 23, 61,62, 63, 172, 173, 174, 175, 177, 178], [1, 2, 14, 24, 82, 83, 86, 88, 165], [1, 2, 14, 24, 82, 83, 86, 88, 163, 166, 81, 80, 170], [1, 2, 14, 24, 82, 83, 86, 88, 163, 166, 168, 169], [1, 2, 14, 24, 82, 83, 86, 88, 163, 166, 167, 168, 169], [1, 2, 14, 24, 82, 83, 86, 88, 163, 167, 168, 169], [1, 2, 14, 24, 82, 83, 86, 88, 163, 165], [1, 2, 14, 24, 82, 83, 86, 88, 91, 166, 81, 80, 170], [1, 2, 14, 24, 82, 83, 86, 88, 91, 166, 168, 169], [1, 2, 14, 24, 82, 83, 86, 88, 91, 166, 167, 168, 169], [1, 2, 14, 24, 82, 83, 86, 88, 91, 164, 165], [1, 2, 14, 24, 78, 81, 80, 170], [1, 2, 14, 24, 78, 79, 80, 170], [1, 2, 94, 166, 81, 80, 170], [1, 2, 94, 166, 168, 169],[1, 2, 94, 166, 167, 168, 169], [1, 2, 26, 37, 36], [1, 2, 26, 37, 39, 30, 99, 95, 100, 97, 98], [1, 2, 26, 37, 39, 30, 99, 95, 100, 98], [1, 2, 26, 37, 39, 30, 99, 95, 31, 32], [1, 2, 26, 37, 39, 30, 99, 95, 97, 98], [1, 2, 26, 37, 39, 30, 99, 95, 96], [1, 2, 26, 37, 39, 30, 99, 95, 36], [1, 2, 26, 37, 39, 30, 99, 31, 32], [1, 2, 26, 37, 39, 30, 99, 96], [1, 2, 26, 37, 39, 30, 99, 97, 98], [1, 2, 26, 37, 39, 30, 99, 100, 97, 98], [1, 2, 26, 37, 39, 30, 99, 100, 98], [1, 2, 26, 37, 39, 30, 99, 36], [1, 2, 26, 37, 39, 30, 101, 95, 100, 97, 98], [1, 2, 26, 37, 39, 30, 101, 95, 100, 98], [1, 2, 26, 37, 39, 30, 101, 95, 31, 32], [1, 2, 26, 37, 39, 30, 101, 95, 97, 98], [1, 2, 26, 37, 39, 30, 101, 95, 96], [1, 2, 26, 37, 39, 30, 101, 95, 36], [1, 2, 26, 37, 39, 30, 101, 31, 32], [1, 2, 26, 37, 39, 30, 101, 36], [1, 2, 26, 37, 39, 30, 101, 96], [1, 2, 26, 37, 39, 30, 95, 100, 97, 98], [1, 2, 26, 37, 39, 30, 95, 100, 98], [1, 2, 26, 37, 39, 30, 95, 31, 32], [1, 2, 26, 37, 39, 30, 95, 97,98], [1, 2, 26, 37, 39, 30, 95, 96], [1, 2, 26, 37, 39, 30, 95, 36], [1, 2, 26, 37, 39, 30, 36], [1, 2, 26, 37, 39, 30, 31, 32], [1, 2, 26, 37, 39, 36], [1, 2, 26, 35, 36], [1, 2, 26, 6, 36], [1, 2, 26, 6, 8, 11, 161, 36], [1, 2, 26, 6, 8, 11, 36], [1, 2, 26, 6, 8, 11, 99, 95, 100, 97, 98], [1, 2, 26, 6, 8, 11, 99, 95, 100, 98], [1, 2, 26, 6, 8, 11, 99, 95, 31, 32], [1, 2, 26, 6, 8, 11, 99, 95, 97, 98], [1, 2, 26, 6, 8, 11, 99, 95, 96], [1, 2, 26, 6, 8, 11, 99, 95, 36], [1, 2, 26, 6, 8, 11, 99, 31, 32], [1, 2, 26, 6, 8, 11, 99, 96], [1, 2, 26, 6, 8, 11, 99, 97, 98], [1, 2, 26, 6, 8, 11, 99, 100, 97, 98], [1, 2, 26, 6, 8, 11, 99, 100, 98], [1, 2, 26, 6, 8,11, 99, 36], [1, 2, 26, 6, 8, 11, 39, 30, 99, 95, 100, 97, 98], [1, 2, 26, 6, 8, 11, 39, 30, 99, 95, 100, 98], [1, 2, 26, 6, 8, 11, 39, 30, 99, 95, 31, 32], [1, 2, 26, 6, 8, 11, 39, 30, 99, 95, 97, 98], [1, 2, 26, 6, 8, 11, 39, 30, 99, 95, 96], [1, 2, 26, 6, 8, 11, 39, 30, 99, 95, 36], [1, 2, 26, 6, 8, 11, 39, 30, 99, 31, 32], [1, 2, 26, 6, 8, 11, 39, 30, 99, 96], [1, 2, 26, 6, 8, 11, 39, 30, 99, 97, 98], [1, 2, 26, 6, 8, 11, 39, 30, 99, 100, 97, 98], [1, 2, 26, 6, 8, 11, 39, 30, 99, 100, 98], [1, 2, 26, 6, 8, 11, 39, 30, 99, 36], [1, 2, 26, 6, 8, 11, 39, 30, 101, 95, 100, 97, 98], [1, 2, 26, 6, 8, 11, 39, 30, 101, 95, 100, 98], [1, 2, 26, 6, 8, 11, 39, 30, 101, 95, 31, 32], [1, 2, 26, 6, 8, 11, 39, 30, 101, 95, 97, 98], [1, 2, 26, 6, 8, 11, 39, 30, 101, 95, 96], [1, 2, 26, 6, 8, 11, 39, 30, 101, 95, 36], [1, 2, 26, 6, 8, 11, 39, 30, 101, 31, 32], [1, 2, 26, 6, 8, 11, 39, 30, 101, 36], [1, 2, 26, 6, 8, 11, 39, 30, 101, 96], [1, 2, 26, 6, 8, 11, 39, 30, 95, 100, 97, 98], [1, 2, 26,6, 8, 11, 39, 30, 95, 100, 98], [1, 2, 26, 6, 8, 11, 39, 30, 95, 31, 32], [1, 2, 26, 6, 8, 11, 39, 30, 95, 97, 98], [1, 2, 26, 6, 8, 11, 39, 30, 95, 96], [1, 2, 26, 6, 8, 11, 39, 30, 95, 36], [1, 2, 26, 6, 8, 11, 39, 30, 36], [1, 2, 26, 6, 8, 11, 39, 30, 31, 32], [1, 2, 26, 6, 8, 11, 39, 36], [1, 2, 26, 6, 8, 11, 34, 32], [1, 2, 26, 6, 8, 11, 30, 99, 95, 100, 97, 98], [1, 2, 26, 6, 8, 11, 30, 99, 95, 100, 98], [1, 2, 26, 6, 8, 11, 30, 99, 95, 31, 32], [1, 2, 26, 6, 8, 11, 30, 99, 95, 97, 98],[1, 2, 26, 6, 8, 11, 30, 99, 95, 96], [1, 2, 26, 6, 8, 11, 30, 99, 95, 36], [1, 2, 26, 6, 8, 11, 30, 99, 31, 32], [1, 2, 26, 6, 8, 11, 30, 99, 96], [1, 2, 26, 6, 8, 11, 30, 99, 97, 98], [1, 2, 26, 6, 8, 11, 30, 99, 100, 97, 98], [1, 2, 26, 6, 8, 11, 30, 99, 100, 98], [1, 2, 26, 6, 8, 11, 30, 99, 36], [1, 2, 26, 6, 8, 11, 30, 101,95, 100, 97, 98], [1, 2, 26, 6, 8, 11, 30, 101, 95, 100, 98], [1, 2, 26, 6, 8, 11, 30, 101, 95, 31, 32], [1, 2, 26, 6, 8, 11, 30, 101, 95, 97, 98], [1, 2, 26, 6, 8, 11, 30, 101, 95, 96], [1, 2, 26, 6, 8, 11, 30, 101, 95, 36], [1, 2, 26, 6, 8, 11, 30, 101, 31, 32], [1, 2, 26, 6, 8, 11, 30, 101, 36], [1, 2, 26, 6, 8, 11, 30, 101, 96], [1, 2, 26, 6, 8, 11, 30, 95, 100, 97, 98], [1, 2, 26, 6, 8, 11, 30, 95, 100, 98], [1, 2, 26, 6, 8, 11, 30, 95, 31, 32], [1, 2, 26, 6, 8, 11, 30, 95, 97, 98], [1, 2, 26, 6, 8, 11, 30, 95, 96], [1, 2, 26, 6, 8, 11, 30, 95, 36], [1, 2, 26, 6, 8, 11, 30, 36], [1, 2, 26, 6, 8, 11, 30, 31, 32], [1, 2, 12, 7, 9, 25, 33, 30, 99, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25, 33, 30, 99, 95, 100, 98], [1, 2, 12, 7, 9, 25, 33, 30, 99, 95, 31, 32], [1, 2, 12, 7, 9, 25, 33, 30, 99, 95, 97, 98], [1, 2, 12, 7, 9, 25, 33, 30, 99, 95, 96], [1, 2, 12, 7, 9, 25, 33, 30, 99, 95, 36], [1, 2, 12, 7, 9, 25, 33, 30, 99, 31, 32], [1, 2, 12, 7, 9, 25, 33, 30, 99, 96], [1, 2, 12, 7, 9,25, 33, 30, 99, 97, 98], [1, 2, 12, 7, 9, 25, 33, 30, 99, 100, 97, 98], [1, 2, 12, 7, 9, 25, 33, 30, 99, 100, 98], [1, 2, 12, 7, 9, 25, 33, 30, 99, 36], [1, 2, 12, 7, 9, 25, 33, 30, 101, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25, 33, 30, 101, 95, 100, 98], [1, 2, 12, 7, 9, 25, 33, 30, 101, 95, 31, 32], [1, 2, 12, 7, 9, 25, 33, 30, 101, 95, 97, 98], [1, 2, 12, 7, 9, 25, 33, 30, 101, 95, 96], [1, 2, 12, 7, 9, 25, 33, 30, 101, 95, 36], [1, 2, 12, 7, 9, 25, 33, 30, 101, 31, 32], [1, 2, 12, 7, 9, 25, 33, 30, 101, 36], [1, 2, 12, 7, 9, 25, 33, 30, 101, 96], [1, 2, 12, 7, 9, 25, 33, 30, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25, 33, 30, 95, 100, 98], [1, 2, 12, 7, 9, 25, 33, 30, 95, 31, 32], [1, 2, 12, 7, 9, 25, 33, 30, 95, 97, 98], [1, 2, 12, 7, 9, 25, 33, 30, 95, 96], [1, 2, 12, 7, 9, 25, 33, 30, 95, 36], [1, 2, 12, 7, 9, 25, 33, 30, 36], [1, 2, 12, 7, 9, 25, 33, 30, 31, 32], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 95, 100, 98], [1, 2, 12, 7,9, 25, 27, 29, 30, 99, 95, 31, 32], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 95, 97, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 95, 96], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 95, 36], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 31, 32], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 96], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 97, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 100, 97, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 100, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 99, 36], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 95, 100, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 95, 31, 32], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 95, 97, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 95, 96], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 95, 36], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 31, 32], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 36], [1, 2, 12, 7, 9, 25, 27, 29, 30, 101, 96], [1, 2, 12, 7, 9, 25, 27, 29, 30, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 95, 100, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 95, 31, 32], [1, 2, 12, 7, 9, 25, 27, 29, 30, 95, 97, 98], [1, 2, 12, 7, 9, 25, 27, 29, 30, 95, 96], [1, 2, 12, 7, 9, 25, 27, 29, 30, 95, 36], [1, 2, 12, 7, 9, 25, 27, 29, 30, 36], [1, 2, 12, 7, 9, 25, 27, 29, 30, 31, 32], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 95, 100, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 95, 31, 32], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 95, 97, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 95, 96], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 95, 36], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 31, 32], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 96], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 97, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 100, 97, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 100, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 99, 36], [1, 2, 12,7, 9, 25, 27, 28, 30, 101, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 101, 95, 100, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 101, 95, 31, 32], [1, 2, 12, 7, 9, 25, 27, 28, 30, 101, 95, 97, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 101, 95, 96], [1, 2, 12, 7, 9, 25, 27, 28, 30, 101, 95, 36], [1, 2, 12, 7, 9, 25, 27, 28, 30, 101, 31, 32], [1, 2, 12, 7, 9, 25, 27, 28, 30, 101, 36], [1, 2, 12, 7, 9, 25, 27, 28, 30, 101, 96], [1, 2, 12, 7, 9, 25, 27, 28, 30, 95, 100, 97, 98], [1, 2, 12, 7, 9, 25,27, 28, 30, 95, 100, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 95, 31, 32], [1, 2, 12, 7, 9, 25, 27, 28, 30, 95, 97, 98], [1, 2, 12, 7, 9, 25, 27, 28, 30, 95, 96], [1, 2, 12, 7, 9, 25, 27, 28, 30, 95, 36], [1, 2, 12, 7, 9, 25, 27, 28, 30, 36], [1, 2, 12, 7, 9, 25, 27, 28, 30, 31, 32]]
  
cursor = cnx.cursor() 
cursor.execute("select id from temas where nivel =1;")
ramas=cursor.fetchall()
for i in range(len(ramas)):
      ramas[i]=ramas[i][0]

caminosb=[]
for i in range(len(caminos)):
  cont =0
  for j in range(len(caminos[i])):
    if caminos[i][j] in ramas:
      cont+=1
    if cont>1:
      break
  if cont==1:
    caminosb.append(caminos[i])
 

caminosBC=[]

for i in range(len(ramas)):
  caminosBC.append([])
  
for i in range(len(caminosb)):
  for j in range(len(ramas)):
    if caminosb[i][1]==ramas[j]:
      caminosBC[j].append(caminosb[i])

nombre_rbma_pickle = "red_bayesiana/metodo_rutas_evaluacion/rbma/rbma_1530004.pkl" #pickle
infile = open(nombre_rbma_pickle,'rb')
RBMA = pickle.load(infile)
infile.close()
nodos=[]
nodosGDCRB=[]

for i in RBMA[1]:
  if RBMA[1][i].grado_de_conocimiento!=-1:
     nodos.append([int(RBMA[1][i].id),int(RBMA[1][i].grado_de_conocimiento)])
  else:
      if  RBMA[1][i].matriz_inferencia_final[0]==0 and RBMA[1][i].matriz_inferencia_final[1]==0 and RBMA[1][i].matriz_inferencia_final[2]==0:
         nodos.append([int(RBMA[1][i].id),RBMA[1][i].matriz_inferencia.index(max(RBMA[1][i].matriz_inferencia))])
      else:
           nodos.append([int(RBMA[1][i].id),RBMA[1][i].matriz_inferencia_final.index(max(RBMA[1][i].matriz_inferencia_final))])  
          
          
for n in nodos:
   if n[1]<2:
    nodosGDCRB.append(n[0])

nodosECB=[]

for i in range(len(ramas)):
  nodosECB.append([])  

for i in range(len(caminosBC)):
  for j in range(len(caminosBC[i])):
    for k in range(len(caminosBC[i][j])):
      for l in range(len(nodosGDCRB)):
         if nodosGDCRB[l]==caminosBC[i][j][k]:
          nodosECB[i].append(caminosBC[i][j][k])
for i in range(len(nodosECB)):
  nodosECB[i]=list(set(nodosECB[i]))

for h in range(len(nodosECB)):  
  n = len(nodosECB[h])
  for i in range(n-1):       # <-- bucle padre
    for j in range(n-1-i): # <-- bucle hijo
      if RBMA[1][str(nodosECB[h][j])].dificultad > RBMA[1][str(nodosECB[h][j+1])].dificultad:
        nodosECB[h][j], nodosECB[h][j+1] = nodosECB[h][j+1], nodosECB[h][j]

        
f = open ("RA.txt",'wb')
for i in range(len(nodosECB)):
  for j in range(1,len(nodosECB[i])):
     if nodosECB[i][j] not in ramas:
      cursor.execute("select nombre_tema from temas where id ="+str(nodosECB[i][j])+";")  
      nombre=cursor.fetchall()
      f.write(nombre[0][0].encode())
      nombre="\n"
      f.write(nombre[0][0].encode())
      print(nodosECB[i][j],end=",")
  nombre="\n\n\n"
  f.write(nombre[0][0].encode())
  print()
  

 